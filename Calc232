import java.util.Arrays;
import java.util.Scanner;

class Calc {


        public static void main(String[] args) throws Exception {
            Scanner ap = new Scanner(System.in);
            String ex = ap.nextLine();
            System.out.println(parse(ex));

        }

        public static String parse(String ex) throws Exception {
            int num1;
            int num2;
            String oper;
            String result;
            boolean isr;
            String[] operands = ex.split("[+\\-*/]");
            if (operands.length != 2) throw new Exception("Должно быть два");
            oper = detectOperat(ex);
            if (oper == null) throw new Exception("Не правильная операция");
            if (Roman.isRoman(operands[0]) && Roman.isRoman(operands[1])) {
                // convert
                num1 = Roman.convertToArabian(operands[0]);
                num2 = Roman.convertToArabian(operands[1]);
                isr = true;
            }
            else if (!Roman.isRoman(operands[0]) && !Roman.isRoman(operands[1])) {
                num1 = Integer.parseInt(operands[0]);
                num2 = Integer.parseInt(operands[1]);
                isr = false;
            }
            else {
                throw new Exception("Числа должны быть в одном формате");
            }
            if (num1 > 10 || num2 > 10) {
                throw new Exception("Числа должны быть от 1 до 10");
            }
            int arabian = calc(num1, num2, oper);
            if (isr) {
                if (arabian <= 0) {
                    throw new Exception("В римской системе нет отрицательных чисел");
                }
                result = Roman.convertToRoman(arabian);
            } else {
                result = String.valueOf(arabian);
            }

            return result;


        }
    static int calc(int a, int b, String oper){
        switch (oper){
            case "+":
                return a + b;
            case "-":
                return a - b;
            case "*":
                return a * b;
            case "/":
                return a / b;

        }
        return a / b;
    }

    static String detectOperat(String expression) {
        if (expression.contains("+")) return "+";
        else if (expression.contains("-")) return "-";
        else if (expression.contains("*")) return "*";
        else if (expression.contains("/")) return "/";
        else return null;
    }
    class Roman {
        static String[] romanArray = new String[]{"0", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI",
                "XII", "XIII", "XIV", "XV", "XVI", "XVII", "XVIII", "XIX", "XX", "XXI", "XXII", "XXIII", "XXIV",
                "XXV", "XXVI", "XXVII", "XXVIII", "XXIX", "XXX", "XXXI", "XXXII", "XXXIII", "XXXIV", "XXXV", "XXXVI",
                "XXXVII", "XXXVIII", "XXXIX", "XL", "XLI", "XLII", "XLIII", "XLIV", "XLV", "XLVI", "XLVII", "XLVIII",
                "XLIX", "L", "LI", "LII", "LIII", "LIV", "LV", "LVI", "LVII", "LVIII", "LIX", "LX", "LXI", "LXII",
                "LXIII", "LXIV", "LXV", "LXVI", "LXVII", "LXVIII", "LXIX", "LXX", "LXXI", "LXXII", "LXXIII", "LXXIV",
                "LXXV", "LXXVI", "LXXVII", "LXXVIII", "LXXIX", "LXXX", "LXXXI", "LXXXII", "LXXXIII", "LXXXIV", "LXXXV",
                "LXXXVI", "LXXXVII", "LXXXVIII", "LXXXIX", "XC", "XCI", "XCII", "XCIII", "XCIV", "XCV", "XCVI", "XCVII",
                "XCVIII", "XCIX", "C"};


        public static boolean isRoman(String val) {
            for (int i = 0; i < romanArray.length; i++) {
                if (val.equals(romanArray[i])) {
                    return true;
                }
            }
            return false;
        }

        public static int convertToArabian(String roman) {
            for (int i = 0; i < romanArray.length; i++) {
                if (roman.equals(romanArray[i])) {
                    return i;
                }
            }
            return -1;
        }

        public static String convertToRoman(int arabian) {
            return romanArray[arabian];
        }
    }}
